@{
    ViewData["Title"] = "Home Page";
}

@section Styles {
    <link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
}

<div class="container">
    <h1 class="title">Expense Tracker</h1>

    <!-- Tab Navigation -->
    <div class="tabs">
        <button class="tab-button active" onclick="showView('month')">
            <i class="fas fa-calendar-alt"></i> Month View
        </button>
        <button class="tab-button" onclick="showView('week')">
            <i class="fas fa-calendar-week"></i> Week View
        </button>
    </div>

    <!-- Month View -->
    <div id="month-view" class="view active">
        <div class="view-header">
            <h2>@ViewBag.CurrentMonth Expenses</h2>
            <div class="total-expense">
                <span class="total-label">Total:</span>
                <span class="total-amount">@ViewBag.MonthTotal.ToString("C")</span>
            </div>
        </div>

        <div class="expense-grid">
            @foreach (var item in ViewBag.MonthExpenses)
            {
                <div class="expense-card">
                    <div class="expense-header">
                        <div class="expense-date-category">
                            <div class="expense-date">@item.Expense.Date.ToString("dd MMM yyyy")</div>
                            <div class="expense-category-badge @item.CategoryName.ToLower().Replace(" ", "-")">@item.CategoryName</div>
                        </div>
                        <div class="expense-amount">@item.Expense.Amount.ToString("C")</div>
                    </div>
                    <div class="expense-description">@item.Expense.Name</div>
                    <div class="expense-actions">
                        <button class="action-btn edit" onclick="openEdit()"><i class="fas fa-pencil-alt"></i></button>
                        <button class="action-btn note" onclick="openNoteModal(@item.Expense.Id)"><i class="fas fa-sticky-note"></i></button>
                        <button class="action-btn delete" data-id="@item.Expense.Id"><i class="fas fa-trash"></i></button>
                    </div>
                </div>
            }

            @if (ViewBag.MonthExpenses.Count == 0)
            {
                <div class="no-expenses">
                    No expenses recorded for this month.
                </div>
            }
        </div>
    </div>

    <!-- Week View -->
    <div id="week-view" class="view">
        <div class="view-header">
            <h2>Week of @ViewBag.CurrentWeek</h2>
            <div class="total-expense">
                <span class="total-label">Total:</span>
                <span class="total-amount">@ViewBag.WeekTotal.ToString("C")</span>
            </div>
        </div>
        <div class="expense-grid">
            @foreach (var item in ViewBag.WeekExpenses)
            {
                <div class="expense-card">
                    <div class="expense-header">
                        <div class="expense-date-category">
                            <div class="expense-date">@item.Expense.Date.ToString("dd MMM yyyy")</div>
                            <div class="expense-category-badge @item.CategoryName.ToLower().Replace(" ", "-")">@item.CategoryName</div>
                        </div>
                        <div class="expense-amount">@item.Expense.Amount.ToString("C")</div>
                    </div>
                    <div class="expense-description">@item.Expense.Name</div>
                    <div class="expense-actions">
                        <button class="action-btn edit" onclick="openEdit()"><i class="fas fa-pencil-alt"></i></button>
                        <button class="action-btn note" onclick="openNoteModal(@item.Expense.Id)"><i class="fas fa-sticky-note"></i></button>
                        <button class="action-btn delete" data-id="@item.Expense.Id"><i class="fas fa-trash"></i></button>
                    </div>
                </div>
            }

            @if (ViewBag.WeekExpenses.Count == 0)
            {
                <div class="no-expenses">
                    No expenses recorded for this week.
                </div>
            }
        </div>
    </div>
</div>
<div id="noteModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeNoteModal()">&times;</span>
        <h3>Add/Edit Note</h3>
        <form id="noteForm">
            <input type="hidden" id="expenseIdForNote">
            <div class="form-group">
                <label for="noteBudget">Budget:</label>
                <input type="number" step="0.01" min="0.01" id="noteBudget" class="form-control" required>
            </div>
            <div class="form-group">
                <label for="noteDescription">Description:</label>
                <textarea id="noteDescription" class="form-control" rows="3"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Save Note</button>
        </form>
    </div>
</div>

<script>
        
    function openNoteModal(expenseId) {
        document.getElementById('expenseIdForNote').value = expenseId;
        document.getElementById('noteModal').style.display = 'block';

        
        fetch(`/Home/GetNote?expenseId=${expenseId}`)
            .then(response => response.json())
            .then(data => {
                if (data) {
                    document.getElementById('noteBudget').value = data.budget;
                    document.getElementById('noteDescription').value = data.description;
                }
            });
    }

    function closeNoteModal() {
        document.getElementById('noteModal').style.display = 'none';
        document.getElementById('noteForm').reset();
    }

    
    document.getElementById('noteForm').addEventListener('submit', function(e) {
        e.preventDefault();

        const expenseId = document.getElementById('expenseIdForNote').value;
        const budget = document.getElementById('noteBudget').value;
        const description = document.getElementById('noteDescription').value;

        fetch('/Home/SaveNote', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                ExpenseId: expenseId,
                Budget: budget,
                Description: description
            })
        })
        .then(response => {
            if (response.ok) {
                closeNoteModal();
                
                alert('Note saved successfully!');
            } else {
                alert('Error saving note');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error saving note');
        });
    });
    
    function showView(viewName) {
        document.querySelectorAll('.view').forEach(view => {
            view.classList.remove('active');
        });
        document.querySelectorAll('.tab-button').forEach(button => {
            button.classList.remove('active');
        });

        document.getElementById(`${viewName}-view`).classList.add('active');
        event.currentTarget.classList.add('active');
    }

    
        document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.delete').forEach(button => {
            button.addEventListener('click', function() {
                const expenseCard = this.closest('.expense-card');
                const expenseId = this.getAttribute('data-id');

                if (confirm('Are you sure you want to delete this expense?')) {
                    deleteExpense(expenseId, expenseCard);
                }
            });
        });
    });

    function openEdit() {
        const expenseCard = event.currentTarget.closest('.expense-card');
        const expenseId = expenseCard.querySelector('.delete').getAttribute('data-id');
        window.location.href = `/Home/Edit/${expenseId}`;
    }

    
    function deleteExpense(expenseId, expenseCard) {
            const formData = new FormData();
    formData.append("id", expenseId);

    fetch('Home/Delete', {
        method: 'POST',
        body: formData
    })
        .then(response => {
            if (response.ok) {
                
                expenseCard.remove();

                
                location.reload();
            } else {
                alert('Error deleting expense');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting expense');
        });
    }

    
    function updateTotals() {
        
        location.reload();
    }
</script>